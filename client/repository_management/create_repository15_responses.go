// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateRubyGemsHostedRepositoryReader is a Reader for the CreateRubyGemsHostedRepository structure.
type CreateRubyGemsHostedRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRubyGemsHostedRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRubyGemsHostedRepositoryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateRubyGemsHostedRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRubyGemsHostedRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateRubyGemsHostedRepositoryCreated creates a CreateRubyGemsHostedRepositoryCreated with default headers values
func NewCreateRubyGemsHostedRepositoryCreated() *CreateRubyGemsHostedRepositoryCreated {
	return &CreateRubyGemsHostedRepositoryCreated{}
}

/*
	CreateRubyGemsHostedRepositoryCreated describes a response with status code 201, with default header values.

Repository created
*/
type CreateRubyGemsHostedRepositoryCreated struct {
}

// IsSuccess returns true when this create repository15 created response has a 2xx status code
func (o *CreateRubyGemsHostedRepositoryCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create repository15 created response has a 3xx status code
func (o *CreateRubyGemsHostedRepositoryCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository15 created response has a 4xx status code
func (o *CreateRubyGemsHostedRepositoryCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create repository15 created response has a 5xx status code
func (o *CreateRubyGemsHostedRepositoryCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository15 created response a status code equal to that given
func (o *CreateRubyGemsHostedRepositoryCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateRubyGemsHostedRepositoryCreated) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/rubygems/hosted][%d] createRepository15Created ", 201)
}

func (o *CreateRubyGemsHostedRepositoryCreated) String() string {
	return fmt.Sprintf("[POST /v1/repositories/rubygems/hosted][%d] createRepository15Created ", 201)
}

func (o *CreateRubyGemsHostedRepositoryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRubyGemsHostedRepositoryUnauthorized creates a CreateRubyGemsHostedRepositoryUnauthorized with default headers values
func NewCreateRubyGemsHostedRepositoryUnauthorized() *CreateRubyGemsHostedRepositoryUnauthorized {
	return &CreateRubyGemsHostedRepositoryUnauthorized{}
}

/*
	CreateRubyGemsHostedRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type CreateRubyGemsHostedRepositoryUnauthorized struct {
}

// IsSuccess returns true when this create repository15 unauthorized response has a 2xx status code
func (o *CreateRubyGemsHostedRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository15 unauthorized response has a 3xx status code
func (o *CreateRubyGemsHostedRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository15 unauthorized response has a 4xx status code
func (o *CreateRubyGemsHostedRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository15 unauthorized response has a 5xx status code
func (o *CreateRubyGemsHostedRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository15 unauthorized response a status code equal to that given
func (o *CreateRubyGemsHostedRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateRubyGemsHostedRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/rubygems/hosted][%d] createRepository15Unauthorized ", 401)
}

func (o *CreateRubyGemsHostedRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/rubygems/hosted][%d] createRepository15Unauthorized ", 401)
}

func (o *CreateRubyGemsHostedRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRubyGemsHostedRepositoryForbidden creates a CreateRubyGemsHostedRepositoryForbidden with default headers values
func NewCreateRubyGemsHostedRepositoryForbidden() *CreateRubyGemsHostedRepositoryForbidden {
	return &CreateRubyGemsHostedRepositoryForbidden{}
}

/*
	CreateRubyGemsHostedRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type CreateRubyGemsHostedRepositoryForbidden struct {
}

// IsSuccess returns true when this create repository15 forbidden response has a 2xx status code
func (o *CreateRubyGemsHostedRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository15 forbidden response has a 3xx status code
func (o *CreateRubyGemsHostedRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository15 forbidden response has a 4xx status code
func (o *CreateRubyGemsHostedRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository15 forbidden response has a 5xx status code
func (o *CreateRubyGemsHostedRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository15 forbidden response a status code equal to that given
func (o *CreateRubyGemsHostedRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateRubyGemsHostedRepositoryForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/rubygems/hosted][%d] createRepository15Forbidden ", 403)
}

func (o *CreateRubyGemsHostedRepositoryForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/rubygems/hosted][%d] createRepository15Forbidden ", 403)
}

func (o *CreateRubyGemsHostedRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
