// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRawGroupRepositoryReader is a Reader for the UpdateRawGroupRepository structure.
type UpdateRawGroupRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRawGroupRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRawGroupRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateRawGroupRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRawGroupRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRawGroupRepositoryNoContent creates a UpdateRawGroupRepositoryNoContent with default headers values
func NewUpdateRawGroupRepositoryNoContent() *UpdateRawGroupRepositoryNoContent {
	return &UpdateRawGroupRepositoryNoContent{}
}

/*
	UpdateRawGroupRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRawGroupRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository5 no content response has a 2xx status code
func (o *UpdateRawGroupRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository5 no content response has a 3xx status code
func (o *UpdateRawGroupRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository5 no content response has a 4xx status code
func (o *UpdateRawGroupRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository5 no content response has a 5xx status code
func (o *UpdateRawGroupRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository5 no content response a status code equal to that given
func (o *UpdateRawGroupRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateRawGroupRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/group/{repositoryName}][%d] updateRepository5NoContent ", 204)
}

func (o *UpdateRawGroupRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/group/{repositoryName}][%d] updateRepository5NoContent ", 204)
}

func (o *UpdateRawGroupRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRawGroupRepositoryUnauthorized creates a UpdateRawGroupRepositoryUnauthorized with default headers values
func NewUpdateRawGroupRepositoryUnauthorized() *UpdateRawGroupRepositoryUnauthorized {
	return &UpdateRawGroupRepositoryUnauthorized{}
}

/*
	UpdateRawGroupRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRawGroupRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository5 unauthorized response has a 2xx status code
func (o *UpdateRawGroupRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository5 unauthorized response has a 3xx status code
func (o *UpdateRawGroupRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository5 unauthorized response has a 4xx status code
func (o *UpdateRawGroupRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository5 unauthorized response has a 5xx status code
func (o *UpdateRawGroupRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository5 unauthorized response a status code equal to that given
func (o *UpdateRawGroupRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateRawGroupRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/group/{repositoryName}][%d] updateRepository5Unauthorized ", 401)
}

func (o *UpdateRawGroupRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/group/{repositoryName}][%d] updateRepository5Unauthorized ", 401)
}

func (o *UpdateRawGroupRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRawGroupRepositoryForbidden creates a UpdateRawGroupRepositoryForbidden with default headers values
func NewUpdateRawGroupRepositoryForbidden() *UpdateRawGroupRepositoryForbidden {
	return &UpdateRawGroupRepositoryForbidden{}
}

/*
	UpdateRawGroupRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRawGroupRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository5 forbidden response has a 2xx status code
func (o *UpdateRawGroupRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository5 forbidden response has a 3xx status code
func (o *UpdateRawGroupRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository5 forbidden response has a 4xx status code
func (o *UpdateRawGroupRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository5 forbidden response has a 5xx status code
func (o *UpdateRawGroupRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository5 forbidden response a status code equal to that given
func (o *UpdateRawGroupRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateRawGroupRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/group/{repositoryName}][%d] updateRepository5Forbidden ", 403)
}

func (o *UpdateRawGroupRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/group/{repositoryName}][%d] updateRepository5Forbidden ", 403)
}

func (o *UpdateRawGroupRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
