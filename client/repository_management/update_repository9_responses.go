// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateNpmHostedRepositoryReader is a Reader for the UpdateNpmHostedRepository structure.
type UpdateNpmHostedRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNpmHostedRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateNpmHostedRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateNpmHostedRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateNpmHostedRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNpmHostedRepositoryNoContent creates a UpdateNpmHostedRepositoryNoContent with default headers values
func NewUpdateNpmHostedRepositoryNoContent() *UpdateNpmHostedRepositoryNoContent {
	return &UpdateNpmHostedRepositoryNoContent{}
}

/*
	UpdateNpmHostedRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateNpmHostedRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository9 no content response has a 2xx status code
func (o *UpdateNpmHostedRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository9 no content response has a 3xx status code
func (o *UpdateNpmHostedRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository9 no content response has a 4xx status code
func (o *UpdateNpmHostedRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository9 no content response has a 5xx status code
func (o *UpdateNpmHostedRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository9 no content response a status code equal to that given
func (o *UpdateNpmHostedRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateNpmHostedRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository9NoContent ", 204)
}

func (o *UpdateNpmHostedRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository9NoContent ", 204)
}

func (o *UpdateNpmHostedRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNpmHostedRepositoryUnauthorized creates a UpdateNpmHostedRepositoryUnauthorized with default headers values
func NewUpdateNpmHostedRepositoryUnauthorized() *UpdateNpmHostedRepositoryUnauthorized {
	return &UpdateNpmHostedRepositoryUnauthorized{}
}

/*
	UpdateNpmHostedRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateNpmHostedRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository9 unauthorized response has a 2xx status code
func (o *UpdateNpmHostedRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository9 unauthorized response has a 3xx status code
func (o *UpdateNpmHostedRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository9 unauthorized response has a 4xx status code
func (o *UpdateNpmHostedRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository9 unauthorized response has a 5xx status code
func (o *UpdateNpmHostedRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository9 unauthorized response a status code equal to that given
func (o *UpdateNpmHostedRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateNpmHostedRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository9Unauthorized ", 401)
}

func (o *UpdateNpmHostedRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository9Unauthorized ", 401)
}

func (o *UpdateNpmHostedRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNpmHostedRepositoryForbidden creates a UpdateNpmHostedRepositoryForbidden with default headers values
func NewUpdateNpmHostedRepositoryForbidden() *UpdateNpmHostedRepositoryForbidden {
	return &UpdateNpmHostedRepositoryForbidden{}
}

/*
	UpdateNpmHostedRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateNpmHostedRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository9 forbidden response has a 2xx status code
func (o *UpdateNpmHostedRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository9 forbidden response has a 3xx status code
func (o *UpdateNpmHostedRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository9 forbidden response has a 4xx status code
func (o *UpdateNpmHostedRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository9 forbidden response has a 5xx status code
func (o *UpdateNpmHostedRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository9 forbidden response a status code equal to that given
func (o *UpdateNpmHostedRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateNpmHostedRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository9Forbidden ", 403)
}

func (o *UpdateNpmHostedRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/npm/hosted/{repositoryName}][%d] updateRepository9Forbidden ", 403)
}

func (o *UpdateNpmHostedRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
