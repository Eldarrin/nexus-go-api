// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRawProxyRepositoryReader is a Reader for the UpdateRawProxyRepository structure.
type UpdateRawProxyRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRawProxyRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRawProxyRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateRawProxyRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRawProxyRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRawProxyRepositoryNoContent creates a UpdateRawProxyRepositoryNoContent with default headers values
func NewUpdateRawProxyRepositoryNoContent() *UpdateRawProxyRepositoryNoContent {
	return &UpdateRawProxyRepositoryNoContent{}
}

/*
	UpdateRawProxyRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRawProxyRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository7 no content response has a 2xx status code
func (o *UpdateRawProxyRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository7 no content response has a 3xx status code
func (o *UpdateRawProxyRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository7 no content response has a 4xx status code
func (o *UpdateRawProxyRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository7 no content response has a 5xx status code
func (o *UpdateRawProxyRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository7 no content response a status code equal to that given
func (o *UpdateRawProxyRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateRawProxyRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7NoContent ", 204)
}

func (o *UpdateRawProxyRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7NoContent ", 204)
}

func (o *UpdateRawProxyRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRawProxyRepositoryUnauthorized creates a UpdateRawProxyRepositoryUnauthorized with default headers values
func NewUpdateRawProxyRepositoryUnauthorized() *UpdateRawProxyRepositoryUnauthorized {
	return &UpdateRawProxyRepositoryUnauthorized{}
}

/*
	UpdateRawProxyRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRawProxyRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository7 unauthorized response has a 2xx status code
func (o *UpdateRawProxyRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository7 unauthorized response has a 3xx status code
func (o *UpdateRawProxyRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository7 unauthorized response has a 4xx status code
func (o *UpdateRawProxyRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository7 unauthorized response has a 5xx status code
func (o *UpdateRawProxyRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository7 unauthorized response a status code equal to that given
func (o *UpdateRawProxyRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateRawProxyRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7Unauthorized ", 401)
}

func (o *UpdateRawProxyRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7Unauthorized ", 401)
}

func (o *UpdateRawProxyRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRawProxyRepositoryForbidden creates a UpdateRawProxyRepositoryForbidden with default headers values
func NewUpdateRawProxyRepositoryForbidden() *UpdateRawProxyRepositoryForbidden {
	return &UpdateRawProxyRepositoryForbidden{}
}

/*
	UpdateRawProxyRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRawProxyRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository7 forbidden response has a 2xx status code
func (o *UpdateRawProxyRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository7 forbidden response has a 3xx status code
func (o *UpdateRawProxyRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository7 forbidden response has a 4xx status code
func (o *UpdateRawProxyRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository7 forbidden response has a 5xx status code
func (o *UpdateRawProxyRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository7 forbidden response a status code equal to that given
func (o *UpdateRawProxyRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateRawProxyRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7Forbidden ", 403)
}

func (o *UpdateRawProxyRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/raw/proxy/{repositoryName}][%d] updateRepository7Forbidden ", 403)
}

func (o *UpdateRawProxyRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
