// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRGroupRepositoryReader is a Reader for the UpdateRGroupRepository structure.
type UpdateRGroupRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRGroupRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRGroupRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateRGroupRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRGroupRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRGroupRepositoryNoContent creates a UpdateRGroupRepositoryNoContent with default headers values
func NewUpdateRGroupRepositoryNoContent() *UpdateRGroupRepositoryNoContent {
	return &UpdateRGroupRepositoryNoContent{}
}

/*
	UpdateRGroupRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRGroupRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository31 no content response has a 2xx status code
func (o *UpdateRGroupRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository31 no content response has a 3xx status code
func (o *UpdateRGroupRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository31 no content response has a 4xx status code
func (o *UpdateRGroupRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository31 no content response has a 5xx status code
func (o *UpdateRGroupRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository31 no content response a status code equal to that given
func (o *UpdateRGroupRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateRGroupRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/group/{repositoryName}][%d] updateRepository31NoContent ", 204)
}

func (o *UpdateRGroupRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/group/{repositoryName}][%d] updateRepository31NoContent ", 204)
}

func (o *UpdateRGroupRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRGroupRepositoryUnauthorized creates a UpdateRGroupRepositoryUnauthorized with default headers values
func NewUpdateRGroupRepositoryUnauthorized() *UpdateRGroupRepositoryUnauthorized {
	return &UpdateRGroupRepositoryUnauthorized{}
}

/*
	UpdateRGroupRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRGroupRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository31 unauthorized response has a 2xx status code
func (o *UpdateRGroupRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository31 unauthorized response has a 3xx status code
func (o *UpdateRGroupRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository31 unauthorized response has a 4xx status code
func (o *UpdateRGroupRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository31 unauthorized response has a 5xx status code
func (o *UpdateRGroupRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository31 unauthorized response a status code equal to that given
func (o *UpdateRGroupRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateRGroupRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/group/{repositoryName}][%d] updateRepository31Unauthorized ", 401)
}

func (o *UpdateRGroupRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/group/{repositoryName}][%d] updateRepository31Unauthorized ", 401)
}

func (o *UpdateRGroupRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRGroupRepositoryForbidden creates a UpdateRGroupRepositoryForbidden with default headers values
func NewUpdateRGroupRepositoryForbidden() *UpdateRGroupRepositoryForbidden {
	return &UpdateRGroupRepositoryForbidden{}
}

/*
	UpdateRGroupRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRGroupRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository31 forbidden response has a 2xx status code
func (o *UpdateRGroupRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository31 forbidden response has a 3xx status code
func (o *UpdateRGroupRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository31 forbidden response has a 4xx status code
func (o *UpdateRGroupRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository31 forbidden response has a 5xx status code
func (o *UpdateRGroupRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository31 forbidden response a status code equal to that given
func (o *UpdateRGroupRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateRGroupRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/group/{repositoryName}][%d] updateRepository31Forbidden ", 403)
}

func (o *UpdateRGroupRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/r/group/{repositoryName}][%d] updateRepository31Forbidden ", 403)
}

func (o *UpdateRGroupRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
