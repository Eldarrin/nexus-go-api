// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateNugetProxyRepositoryReader is a Reader for the UpdateNugetProxyRepository structure.
type UpdateNugetProxyRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNugetProxyRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateNugetProxyRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateNugetProxyRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateNugetProxyRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNugetProxyRepositoryNoContent creates a UpdateNugetProxyRepositoryNoContent with default headers values
func NewUpdateNugetProxyRepositoryNoContent() *UpdateNugetProxyRepositoryNoContent {
	return &UpdateNugetProxyRepositoryNoContent{}
}

/*
	UpdateNugetProxyRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateNugetProxyRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository13 no content response has a 2xx status code
func (o *UpdateNugetProxyRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository13 no content response has a 3xx status code
func (o *UpdateNugetProxyRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository13 no content response has a 4xx status code
func (o *UpdateNugetProxyRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository13 no content response has a 5xx status code
func (o *UpdateNugetProxyRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository13 no content response a status code equal to that given
func (o *UpdateNugetProxyRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateNugetProxyRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/proxy/{repositoryName}][%d] updateRepository13NoContent ", 204)
}

func (o *UpdateNugetProxyRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/proxy/{repositoryName}][%d] updateRepository13NoContent ", 204)
}

func (o *UpdateNugetProxyRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNugetProxyRepositoryUnauthorized creates a UpdateNugetProxyRepositoryUnauthorized with default headers values
func NewUpdateNugetProxyRepositoryUnauthorized() *UpdateNugetProxyRepositoryUnauthorized {
	return &UpdateNugetProxyRepositoryUnauthorized{}
}

/*
	UpdateNugetProxyRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateNugetProxyRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository13 unauthorized response has a 2xx status code
func (o *UpdateNugetProxyRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository13 unauthorized response has a 3xx status code
func (o *UpdateNugetProxyRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository13 unauthorized response has a 4xx status code
func (o *UpdateNugetProxyRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository13 unauthorized response has a 5xx status code
func (o *UpdateNugetProxyRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository13 unauthorized response a status code equal to that given
func (o *UpdateNugetProxyRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateNugetProxyRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/proxy/{repositoryName}][%d] updateRepository13Unauthorized ", 401)
}

func (o *UpdateNugetProxyRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/proxy/{repositoryName}][%d] updateRepository13Unauthorized ", 401)
}

func (o *UpdateNugetProxyRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNugetProxyRepositoryForbidden creates a UpdateNugetProxyRepositoryForbidden with default headers values
func NewUpdateNugetProxyRepositoryForbidden() *UpdateNugetProxyRepositoryForbidden {
	return &UpdateNugetProxyRepositoryForbidden{}
}

/*
	UpdateNugetProxyRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateNugetProxyRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository13 forbidden response has a 2xx status code
func (o *UpdateNugetProxyRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository13 forbidden response has a 3xx status code
func (o *UpdateNugetProxyRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository13 forbidden response has a 4xx status code
func (o *UpdateNugetProxyRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository13 forbidden response has a 5xx status code
func (o *UpdateNugetProxyRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository13 forbidden response a status code equal to that given
func (o *UpdateNugetProxyRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateNugetProxyRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/proxy/{repositoryName}][%d] updateRepository13Forbidden ", 403)
}

func (o *UpdateNugetProxyRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/proxy/{repositoryName}][%d] updateRepository13Forbidden ", 403)
}

func (o *UpdateNugetProxyRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
