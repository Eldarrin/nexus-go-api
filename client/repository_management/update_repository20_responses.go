// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateYumGroupRepositoryReader is a Reader for the UpdateYumGroupRepository structure.
type UpdateYumGroupRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateYumGroupRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateYumGroupRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateYumGroupRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateYumGroupRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateYumGroupRepositoryNoContent creates a UpdateYumGroupRepositoryNoContent with default headers values
func NewUpdateYumGroupRepositoryNoContent() *UpdateYumGroupRepositoryNoContent {
	return &UpdateYumGroupRepositoryNoContent{}
}

/*
	UpdateYumGroupRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateYumGroupRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository20 no content response has a 2xx status code
func (o *UpdateYumGroupRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository20 no content response has a 3xx status code
func (o *UpdateYumGroupRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository20 no content response has a 4xx status code
func (o *UpdateYumGroupRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository20 no content response has a 5xx status code
func (o *UpdateYumGroupRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository20 no content response a status code equal to that given
func (o *UpdateYumGroupRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateYumGroupRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/group/{repositoryName}][%d] updateRepository20NoContent ", 204)
}

func (o *UpdateYumGroupRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/group/{repositoryName}][%d] updateRepository20NoContent ", 204)
}

func (o *UpdateYumGroupRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateYumGroupRepositoryUnauthorized creates a UpdateYumGroupRepositoryUnauthorized with default headers values
func NewUpdateYumGroupRepositoryUnauthorized() *UpdateYumGroupRepositoryUnauthorized {
	return &UpdateYumGroupRepositoryUnauthorized{}
}

/*
	UpdateYumGroupRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateYumGroupRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository20 unauthorized response has a 2xx status code
func (o *UpdateYumGroupRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository20 unauthorized response has a 3xx status code
func (o *UpdateYumGroupRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository20 unauthorized response has a 4xx status code
func (o *UpdateYumGroupRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository20 unauthorized response has a 5xx status code
func (o *UpdateYumGroupRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository20 unauthorized response a status code equal to that given
func (o *UpdateYumGroupRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateYumGroupRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/group/{repositoryName}][%d] updateRepository20Unauthorized ", 401)
}

func (o *UpdateYumGroupRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/group/{repositoryName}][%d] updateRepository20Unauthorized ", 401)
}

func (o *UpdateYumGroupRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateYumGroupRepositoryForbidden creates a UpdateYumGroupRepositoryForbidden with default headers values
func NewUpdateYumGroupRepositoryForbidden() *UpdateYumGroupRepositoryForbidden {
	return &UpdateYumGroupRepositoryForbidden{}
}

/*
	UpdateYumGroupRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateYumGroupRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository20 forbidden response has a 2xx status code
func (o *UpdateYumGroupRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository20 forbidden response has a 3xx status code
func (o *UpdateYumGroupRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository20 forbidden response has a 4xx status code
func (o *UpdateYumGroupRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository20 forbidden response has a 5xx status code
func (o *UpdateYumGroupRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository20 forbidden response a status code equal to that given
func (o *UpdateYumGroupRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateYumGroupRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/group/{repositoryName}][%d] updateRepository20Forbidden ", 403)
}

func (o *UpdateYumGroupRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/yum/group/{repositoryName}][%d] updateRepository20Forbidden ", 403)
}

func (o *UpdateYumGroupRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
