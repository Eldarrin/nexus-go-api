// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateNugetGroupRepositoryReader is a Reader for the UpdateNugetGroupRepository structure.
type UpdateNugetGroupRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNugetGroupRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateNugetGroupRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateNugetGroupRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateNugetGroupRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNugetGroupRepositoryNoContent creates a UpdateNugetGroupRepositoryNoContent with default headers values
func NewUpdateNugetGroupRepositoryNoContent() *UpdateNugetGroupRepositoryNoContent {
	return &UpdateNugetGroupRepositoryNoContent{}
}

/*
	UpdateNugetGroupRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateNugetGroupRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository11 no content response has a 2xx status code
func (o *UpdateNugetGroupRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository11 no content response has a 3xx status code
func (o *UpdateNugetGroupRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository11 no content response has a 4xx status code
func (o *UpdateNugetGroupRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository11 no content response has a 5xx status code
func (o *UpdateNugetGroupRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository11 no content response a status code equal to that given
func (o *UpdateNugetGroupRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateNugetGroupRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository11NoContent ", 204)
}

func (o *UpdateNugetGroupRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository11NoContent ", 204)
}

func (o *UpdateNugetGroupRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNugetGroupRepositoryUnauthorized creates a UpdateNugetGroupRepositoryUnauthorized with default headers values
func NewUpdateNugetGroupRepositoryUnauthorized() *UpdateNugetGroupRepositoryUnauthorized {
	return &UpdateNugetGroupRepositoryUnauthorized{}
}

/*
	UpdateNugetGroupRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateNugetGroupRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository11 unauthorized response has a 2xx status code
func (o *UpdateNugetGroupRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository11 unauthorized response has a 3xx status code
func (o *UpdateNugetGroupRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository11 unauthorized response has a 4xx status code
func (o *UpdateNugetGroupRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository11 unauthorized response has a 5xx status code
func (o *UpdateNugetGroupRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository11 unauthorized response a status code equal to that given
func (o *UpdateNugetGroupRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateNugetGroupRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository11Unauthorized ", 401)
}

func (o *UpdateNugetGroupRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository11Unauthorized ", 401)
}

func (o *UpdateNugetGroupRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNugetGroupRepositoryForbidden creates a UpdateNugetGroupRepositoryForbidden with default headers values
func NewUpdateNugetGroupRepositoryForbidden() *UpdateNugetGroupRepositoryForbidden {
	return &UpdateNugetGroupRepositoryForbidden{}
}

/*
	UpdateNugetGroupRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateNugetGroupRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository11 forbidden response has a 2xx status code
func (o *UpdateNugetGroupRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository11 forbidden response has a 3xx status code
func (o *UpdateNugetGroupRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository11 forbidden response has a 4xx status code
func (o *UpdateNugetGroupRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository11 forbidden response has a 5xx status code
func (o *UpdateNugetGroupRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository11 forbidden response a status code equal to that given
func (o *UpdateNugetGroupRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateNugetGroupRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository11Forbidden ", 403)
}

func (o *UpdateNugetGroupRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/group/{repositoryName}][%d] updateRepository11Forbidden ", 403)
}

func (o *UpdateNugetGroupRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
