// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateAptHostedRepositoryReader is a Reader for the UpdateAptHostedRepository structure.
type UpdateAptHostedRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAptHostedRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateAptHostedRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateAptHostedRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAptHostedRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAptHostedRepositoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateAptHostedRepositoryNoContent creates a UpdateAptHostedRepositoryNoContent with default headers values
func NewUpdateAptHostedRepositoryNoContent() *UpdateAptHostedRepositoryNoContent {
	return &UpdateAptHostedRepositoryNoContent{}
}

/*
	UpdateAptHostedRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateAptHostedRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository3 no content response has a 2xx status code
func (o *UpdateAptHostedRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository3 no content response has a 3xx status code
func (o *UpdateAptHostedRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository3 no content response has a 4xx status code
func (o *UpdateAptHostedRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository3 no content response has a 5xx status code
func (o *UpdateAptHostedRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository3 no content response a status code equal to that given
func (o *UpdateAptHostedRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateAptHostedRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/hosted/{repositoryName}][%d] updateRepository3NoContent ", 204)
}

func (o *UpdateAptHostedRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/hosted/{repositoryName}][%d] updateRepository3NoContent ", 204)
}

func (o *UpdateAptHostedRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAptHostedRepositoryUnauthorized creates a UpdateAptHostedRepositoryUnauthorized with default headers values
func NewUpdateAptHostedRepositoryUnauthorized() *UpdateAptHostedRepositoryUnauthorized {
	return &UpdateAptHostedRepositoryUnauthorized{}
}

/*
	UpdateAptHostedRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateAptHostedRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository3 unauthorized response has a 2xx status code
func (o *UpdateAptHostedRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository3 unauthorized response has a 3xx status code
func (o *UpdateAptHostedRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository3 unauthorized response has a 4xx status code
func (o *UpdateAptHostedRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository3 unauthorized response has a 5xx status code
func (o *UpdateAptHostedRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository3 unauthorized response a status code equal to that given
func (o *UpdateAptHostedRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateAptHostedRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/hosted/{repositoryName}][%d] updateRepository3Unauthorized ", 401)
}

func (o *UpdateAptHostedRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/hosted/{repositoryName}][%d] updateRepository3Unauthorized ", 401)
}

func (o *UpdateAptHostedRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAptHostedRepositoryForbidden creates a UpdateAptHostedRepositoryForbidden with default headers values
func NewUpdateAptHostedRepositoryForbidden() *UpdateAptHostedRepositoryForbidden {
	return &UpdateAptHostedRepositoryForbidden{}
}

/*
	UpdateAptHostedRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateAptHostedRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository3 forbidden response has a 2xx status code
func (o *UpdateAptHostedRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository3 forbidden response has a 3xx status code
func (o *UpdateAptHostedRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository3 forbidden response has a 4xx status code
func (o *UpdateAptHostedRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository3 forbidden response has a 5xx status code
func (o *UpdateAptHostedRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository3 forbidden response a status code equal to that given
func (o *UpdateAptHostedRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateAptHostedRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/hosted/{repositoryName}][%d] updateRepository3Forbidden ", 403)
}

func (o *UpdateAptHostedRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/hosted/{repositoryName}][%d] updateRepository3Forbidden ", 403)
}

func (o *UpdateAptHostedRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAptHostedRepositoryNotFound creates a UpdateAptHostedRepositoryNotFound with default headers values
func NewUpdateAptHostedRepositoryNotFound() *UpdateAptHostedRepositoryNotFound {
	return &UpdateAptHostedRepositoryNotFound{}
}

/*
	UpdateAptHostedRepositoryNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type UpdateAptHostedRepositoryNotFound struct {
}

// IsSuccess returns true when this update repository3 not found response has a 2xx status code
func (o *UpdateAptHostedRepositoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository3 not found response has a 3xx status code
func (o *UpdateAptHostedRepositoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository3 not found response has a 4xx status code
func (o *UpdateAptHostedRepositoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository3 not found response has a 5xx status code
func (o *UpdateAptHostedRepositoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository3 not found response a status code equal to that given
func (o *UpdateAptHostedRepositoryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateAptHostedRepositoryNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/hosted/{repositoryName}][%d] updateRepository3NotFound ", 404)
}

func (o *UpdateAptHostedRepositoryNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/hosted/{repositoryName}][%d] updateRepository3NotFound ", 404)
}

func (o *UpdateAptHostedRepositoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
