// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateGolangProxyRepositoryReader is a Reader for the UpdateGolangProxyRepository structure.
type UpdateGolangProxyRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGolangProxyRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateGolangProxyRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateGolangProxyRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateGolangProxyRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateGolangProxyRepositoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateGolangProxyRepositoryNoContent creates a UpdateGolangProxyRepositoryNoContent with default headers values
func NewUpdateGolangProxyRepositoryNoContent() *UpdateGolangProxyRepositoryNoContent {
	return &UpdateGolangProxyRepositoryNoContent{}
}

/*
	UpdateGolangProxyRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateGolangProxyRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository36 no content response has a 2xx status code
func (o *UpdateGolangProxyRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository36 no content response has a 3xx status code
func (o *UpdateGolangProxyRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository36 no content response has a 4xx status code
func (o *UpdateGolangProxyRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository36 no content response has a 5xx status code
func (o *UpdateGolangProxyRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository36 no content response a status code equal to that given
func (o *UpdateGolangProxyRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateGolangProxyRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository36NoContent ", 204)
}

func (o *UpdateGolangProxyRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository36NoContent ", 204)
}

func (o *UpdateGolangProxyRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGolangProxyRepositoryUnauthorized creates a UpdateGolangProxyRepositoryUnauthorized with default headers values
func NewUpdateGolangProxyRepositoryUnauthorized() *UpdateGolangProxyRepositoryUnauthorized {
	return &UpdateGolangProxyRepositoryUnauthorized{}
}

/*
	UpdateGolangProxyRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateGolangProxyRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository36 unauthorized response has a 2xx status code
func (o *UpdateGolangProxyRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository36 unauthorized response has a 3xx status code
func (o *UpdateGolangProxyRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository36 unauthorized response has a 4xx status code
func (o *UpdateGolangProxyRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository36 unauthorized response has a 5xx status code
func (o *UpdateGolangProxyRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository36 unauthorized response a status code equal to that given
func (o *UpdateGolangProxyRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateGolangProxyRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository36Unauthorized ", 401)
}

func (o *UpdateGolangProxyRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository36Unauthorized ", 401)
}

func (o *UpdateGolangProxyRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGolangProxyRepositoryForbidden creates a UpdateGolangProxyRepositoryForbidden with default headers values
func NewUpdateGolangProxyRepositoryForbidden() *UpdateGolangProxyRepositoryForbidden {
	return &UpdateGolangProxyRepositoryForbidden{}
}

/*
	UpdateGolangProxyRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateGolangProxyRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository36 forbidden response has a 2xx status code
func (o *UpdateGolangProxyRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository36 forbidden response has a 3xx status code
func (o *UpdateGolangProxyRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository36 forbidden response has a 4xx status code
func (o *UpdateGolangProxyRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository36 forbidden response has a 5xx status code
func (o *UpdateGolangProxyRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository36 forbidden response a status code equal to that given
func (o *UpdateGolangProxyRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateGolangProxyRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository36Forbidden ", 403)
}

func (o *UpdateGolangProxyRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository36Forbidden ", 403)
}

func (o *UpdateGolangProxyRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGolangProxyRepositoryNotFound creates a UpdateGolangProxyRepositoryNotFound with default headers values
func NewUpdateGolangProxyRepositoryNotFound() *UpdateGolangProxyRepositoryNotFound {
	return &UpdateGolangProxyRepositoryNotFound{}
}

/*
	UpdateGolangProxyRepositoryNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type UpdateGolangProxyRepositoryNotFound struct {
}

// IsSuccess returns true when this update repository36 not found response has a 2xx status code
func (o *UpdateGolangProxyRepositoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository36 not found response has a 3xx status code
func (o *UpdateGolangProxyRepositoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository36 not found response has a 4xx status code
func (o *UpdateGolangProxyRepositoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository36 not found response has a 5xx status code
func (o *UpdateGolangProxyRepositoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository36 not found response a status code equal to that given
func (o *UpdateGolangProxyRepositoryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateGolangProxyRepositoryNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository36NotFound ", 404)
}

func (o *UpdateGolangProxyRepositoryNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/go/proxy/{repositoryName}][%d] updateRepository36NotFound ", 404)
}

func (o *UpdateGolangProxyRepositoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
