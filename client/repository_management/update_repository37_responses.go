// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateP2ProxyRepositoryReader is a Reader for the UpdateP2ProxyRepository structure.
type UpdateP2ProxyRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateP2ProxyRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateP2ProxyRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateP2ProxyRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateP2ProxyRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateP2ProxyRepositoryNoContent creates a UpdateP2ProxyRepositoryNoContent with default headers values
func NewUpdateP2ProxyRepositoryNoContent() *UpdateP2ProxyRepositoryNoContent {
	return &UpdateP2ProxyRepositoryNoContent{}
}

/*
	UpdateP2ProxyRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateP2ProxyRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository37 no content response has a 2xx status code
func (o *UpdateP2ProxyRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository37 no content response has a 3xx status code
func (o *UpdateP2ProxyRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository37 no content response has a 4xx status code
func (o *UpdateP2ProxyRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository37 no content response has a 5xx status code
func (o *UpdateP2ProxyRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository37 no content response a status code equal to that given
func (o *UpdateP2ProxyRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateP2ProxyRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/p2/proxy/{repositoryName}][%d] updateRepository37NoContent ", 204)
}

func (o *UpdateP2ProxyRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/p2/proxy/{repositoryName}][%d] updateRepository37NoContent ", 204)
}

func (o *UpdateP2ProxyRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateP2ProxyRepositoryUnauthorized creates a UpdateP2ProxyRepositoryUnauthorized with default headers values
func NewUpdateP2ProxyRepositoryUnauthorized() *UpdateP2ProxyRepositoryUnauthorized {
	return &UpdateP2ProxyRepositoryUnauthorized{}
}

/*
	UpdateP2ProxyRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateP2ProxyRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository37 unauthorized response has a 2xx status code
func (o *UpdateP2ProxyRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository37 unauthorized response has a 3xx status code
func (o *UpdateP2ProxyRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository37 unauthorized response has a 4xx status code
func (o *UpdateP2ProxyRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository37 unauthorized response has a 5xx status code
func (o *UpdateP2ProxyRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository37 unauthorized response a status code equal to that given
func (o *UpdateP2ProxyRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateP2ProxyRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/p2/proxy/{repositoryName}][%d] updateRepository37Unauthorized ", 401)
}

func (o *UpdateP2ProxyRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/p2/proxy/{repositoryName}][%d] updateRepository37Unauthorized ", 401)
}

func (o *UpdateP2ProxyRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateP2ProxyRepositoryForbidden creates a UpdateP2ProxyRepositoryForbidden with default headers values
func NewUpdateP2ProxyRepositoryForbidden() *UpdateP2ProxyRepositoryForbidden {
	return &UpdateP2ProxyRepositoryForbidden{}
}

/*
	UpdateP2ProxyRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateP2ProxyRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository37 forbidden response has a 2xx status code
func (o *UpdateP2ProxyRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository37 forbidden response has a 3xx status code
func (o *UpdateP2ProxyRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository37 forbidden response has a 4xx status code
func (o *UpdateP2ProxyRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository37 forbidden response has a 5xx status code
func (o *UpdateP2ProxyRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository37 forbidden response a status code equal to that given
func (o *UpdateP2ProxyRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateP2ProxyRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/p2/proxy/{repositoryName}][%d] updateRepository37Forbidden ", 403)
}

func (o *UpdateP2ProxyRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/p2/proxy/{repositoryName}][%d] updateRepository37Forbidden ", 403)
}

func (o *UpdateP2ProxyRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
