// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateRHostedRepositoryReader is a Reader for the CreateRHostedRepository structure.
type CreateRHostedRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRHostedRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRHostedRepositoryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateRHostedRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRHostedRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateRHostedRepositoryMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateRHostedRepositoryCreated creates a CreateRHostedRepositoryCreated with default headers values
func NewCreateRHostedRepositoryCreated() *CreateRHostedRepositoryCreated {
	return &CreateRHostedRepositoryCreated{}
}

/*
	CreateRHostedRepositoryCreated describes a response with status code 201, with default header values.

Repository created
*/
type CreateRHostedRepositoryCreated struct {
}

// IsSuccess returns true when this create repository32 created response has a 2xx status code
func (o *CreateRHostedRepositoryCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create repository32 created response has a 3xx status code
func (o *CreateRHostedRepositoryCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository32 created response has a 4xx status code
func (o *CreateRHostedRepositoryCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create repository32 created response has a 5xx status code
func (o *CreateRHostedRepositoryCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository32 created response a status code equal to that given
func (o *CreateRHostedRepositoryCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateRHostedRepositoryCreated) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/hosted][%d] createRepository32Created ", 201)
}

func (o *CreateRHostedRepositoryCreated) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/hosted][%d] createRepository32Created ", 201)
}

func (o *CreateRHostedRepositoryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRHostedRepositoryUnauthorized creates a CreateRHostedRepositoryUnauthorized with default headers values
func NewCreateRHostedRepositoryUnauthorized() *CreateRHostedRepositoryUnauthorized {
	return &CreateRHostedRepositoryUnauthorized{}
}

/*
	CreateRHostedRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type CreateRHostedRepositoryUnauthorized struct {
}

// IsSuccess returns true when this create repository32 unauthorized response has a 2xx status code
func (o *CreateRHostedRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository32 unauthorized response has a 3xx status code
func (o *CreateRHostedRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository32 unauthorized response has a 4xx status code
func (o *CreateRHostedRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository32 unauthorized response has a 5xx status code
func (o *CreateRHostedRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository32 unauthorized response a status code equal to that given
func (o *CreateRHostedRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateRHostedRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/hosted][%d] createRepository32Unauthorized ", 401)
}

func (o *CreateRHostedRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/hosted][%d] createRepository32Unauthorized ", 401)
}

func (o *CreateRHostedRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRHostedRepositoryForbidden creates a CreateRHostedRepositoryForbidden with default headers values
func NewCreateRHostedRepositoryForbidden() *CreateRHostedRepositoryForbidden {
	return &CreateRHostedRepositoryForbidden{}
}

/*
	CreateRHostedRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type CreateRHostedRepositoryForbidden struct {
}

// IsSuccess returns true when this create repository32 forbidden response has a 2xx status code
func (o *CreateRHostedRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository32 forbidden response has a 3xx status code
func (o *CreateRHostedRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository32 forbidden response has a 4xx status code
func (o *CreateRHostedRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository32 forbidden response has a 5xx status code
func (o *CreateRHostedRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository32 forbidden response a status code equal to that given
func (o *CreateRHostedRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateRHostedRepositoryForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/hosted][%d] createRepository32Forbidden ", 403)
}

func (o *CreateRHostedRepositoryForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/hosted][%d] createRepository32Forbidden ", 403)
}

func (o *CreateRHostedRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRHostedRepositoryMethodNotAllowed creates a CreateRHostedRepositoryMethodNotAllowed with default headers values
func NewCreateRHostedRepositoryMethodNotAllowed() *CreateRHostedRepositoryMethodNotAllowed {
	return &CreateRHostedRepositoryMethodNotAllowed{}
}

/*
	CreateRHostedRepositoryMethodNotAllowed describes a response with status code 405, with default header values.

Feature is disabled in High Availability
*/
type CreateRHostedRepositoryMethodNotAllowed struct {
}

// IsSuccess returns true when this create repository32 method not allowed response has a 2xx status code
func (o *CreateRHostedRepositoryMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository32 method not allowed response has a 3xx status code
func (o *CreateRHostedRepositoryMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository32 method not allowed response has a 4xx status code
func (o *CreateRHostedRepositoryMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository32 method not allowed response has a 5xx status code
func (o *CreateRHostedRepositoryMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository32 method not allowed response a status code equal to that given
func (o *CreateRHostedRepositoryMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *CreateRHostedRepositoryMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/r/hosted][%d] createRepository32MethodNotAllowed ", 405)
}

func (o *CreateRHostedRepositoryMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /v1/repositories/r/hosted][%d] createRepository32MethodNotAllowed ", 405)
}

func (o *CreateRHostedRepositoryMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
