// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateRawHostedRepositoryReader is a Reader for the CreateRawHostedRepository structure.
type CreateRawHostedRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRawHostedRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRawHostedRepositoryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateRawHostedRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRawHostedRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateRawHostedRepositoryCreated creates a CreateRawHostedRepositoryCreated with default headers values
func NewCreateRawHostedRepositoryCreated() *CreateRawHostedRepositoryCreated {
	return &CreateRawHostedRepositoryCreated{}
}

/*
	CreateRawHostedRepositoryCreated describes a response with status code 201, with default header values.

Repository created
*/
type CreateRawHostedRepositoryCreated struct {
}

// IsSuccess returns true when this create repository6 created response has a 2xx status code
func (o *CreateRawHostedRepositoryCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create repository6 created response has a 3xx status code
func (o *CreateRawHostedRepositoryCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository6 created response has a 4xx status code
func (o *CreateRawHostedRepositoryCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create repository6 created response has a 5xx status code
func (o *CreateRawHostedRepositoryCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository6 created response a status code equal to that given
func (o *CreateRawHostedRepositoryCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateRawHostedRepositoryCreated) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/raw/hosted][%d] createRepository6Created ", 201)
}

func (o *CreateRawHostedRepositoryCreated) String() string {
	return fmt.Sprintf("[POST /v1/repositories/raw/hosted][%d] createRepository6Created ", 201)
}

func (o *CreateRawHostedRepositoryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRawHostedRepositoryUnauthorized creates a CreateRawHostedRepositoryUnauthorized with default headers values
func NewCreateRawHostedRepositoryUnauthorized() *CreateRawHostedRepositoryUnauthorized {
	return &CreateRawHostedRepositoryUnauthorized{}
}

/*
	CreateRawHostedRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type CreateRawHostedRepositoryUnauthorized struct {
}

// IsSuccess returns true when this create repository6 unauthorized response has a 2xx status code
func (o *CreateRawHostedRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository6 unauthorized response has a 3xx status code
func (o *CreateRawHostedRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository6 unauthorized response has a 4xx status code
func (o *CreateRawHostedRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository6 unauthorized response has a 5xx status code
func (o *CreateRawHostedRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository6 unauthorized response a status code equal to that given
func (o *CreateRawHostedRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateRawHostedRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/raw/hosted][%d] createRepository6Unauthorized ", 401)
}

func (o *CreateRawHostedRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/repositories/raw/hosted][%d] createRepository6Unauthorized ", 401)
}

func (o *CreateRawHostedRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRawHostedRepositoryForbidden creates a CreateRawHostedRepositoryForbidden with default headers values
func NewCreateRawHostedRepositoryForbidden() *CreateRawHostedRepositoryForbidden {
	return &CreateRawHostedRepositoryForbidden{}
}

/*
	CreateRawHostedRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type CreateRawHostedRepositoryForbidden struct {
}

// IsSuccess returns true when this create repository6 forbidden response has a 2xx status code
func (o *CreateRawHostedRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create repository6 forbidden response has a 3xx status code
func (o *CreateRawHostedRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create repository6 forbidden response has a 4xx status code
func (o *CreateRawHostedRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create repository6 forbidden response has a 5xx status code
func (o *CreateRawHostedRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create repository6 forbidden response a status code equal to that given
func (o *CreateRawHostedRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateRawHostedRepositoryForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/repositories/raw/hosted][%d] createRepository6Forbidden ", 403)
}

func (o *CreateRawHostedRepositoryForbidden) String() string {
	return fmt.Sprintf("[POST /v1/repositories/raw/hosted][%d] createRepository6Forbidden ", 403)
}

func (o *CreateRawHostedRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
