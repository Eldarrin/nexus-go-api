// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdatePypiHostedRepositoryReader is a Reader for the UpdatePypiHostedRepository structure.
type UpdatePypiHostedRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePypiHostedRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdatePypiHostedRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdatePypiHostedRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePypiHostedRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdatePypiHostedRepositoryNoContent creates a UpdatePypiHostedRepositoryNoContent with default headers values
func NewUpdatePypiHostedRepositoryNoContent() *UpdatePypiHostedRepositoryNoContent {
	return &UpdatePypiHostedRepositoryNoContent{}
}

/*
	UpdatePypiHostedRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdatePypiHostedRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository27 no content response has a 2xx status code
func (o *UpdatePypiHostedRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository27 no content response has a 3xx status code
func (o *UpdatePypiHostedRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository27 no content response has a 4xx status code
func (o *UpdatePypiHostedRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository27 no content response has a 5xx status code
func (o *UpdatePypiHostedRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository27 no content response a status code equal to that given
func (o *UpdatePypiHostedRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdatePypiHostedRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] updateRepository27NoContent ", 204)
}

func (o *UpdatePypiHostedRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] updateRepository27NoContent ", 204)
}

func (o *UpdatePypiHostedRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePypiHostedRepositoryUnauthorized creates a UpdatePypiHostedRepositoryUnauthorized with default headers values
func NewUpdatePypiHostedRepositoryUnauthorized() *UpdatePypiHostedRepositoryUnauthorized {
	return &UpdatePypiHostedRepositoryUnauthorized{}
}

/*
	UpdatePypiHostedRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdatePypiHostedRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository27 unauthorized response has a 2xx status code
func (o *UpdatePypiHostedRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository27 unauthorized response has a 3xx status code
func (o *UpdatePypiHostedRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository27 unauthorized response has a 4xx status code
func (o *UpdatePypiHostedRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository27 unauthorized response has a 5xx status code
func (o *UpdatePypiHostedRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository27 unauthorized response a status code equal to that given
func (o *UpdatePypiHostedRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdatePypiHostedRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] updateRepository27Unauthorized ", 401)
}

func (o *UpdatePypiHostedRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] updateRepository27Unauthorized ", 401)
}

func (o *UpdatePypiHostedRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePypiHostedRepositoryForbidden creates a UpdatePypiHostedRepositoryForbidden with default headers values
func NewUpdatePypiHostedRepositoryForbidden() *UpdatePypiHostedRepositoryForbidden {
	return &UpdatePypiHostedRepositoryForbidden{}
}

/*
	UpdatePypiHostedRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdatePypiHostedRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository27 forbidden response has a 2xx status code
func (o *UpdatePypiHostedRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository27 forbidden response has a 3xx status code
func (o *UpdatePypiHostedRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository27 forbidden response has a 4xx status code
func (o *UpdatePypiHostedRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository27 forbidden response has a 5xx status code
func (o *UpdatePypiHostedRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository27 forbidden response a status code equal to that given
func (o *UpdatePypiHostedRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdatePypiHostedRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] updateRepository27Forbidden ", 403)
}

func (o *UpdatePypiHostedRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/pypi/hosted/{repositoryName}][%d] updateRepository27Forbidden ", 403)
}

func (o *UpdatePypiHostedRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
