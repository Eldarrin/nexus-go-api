// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateAptProxyRepositoryReader is a Reader for the UpdateAptProxyRepository structure.
type UpdateAptProxyRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAptProxyRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateAptProxyRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateAptProxyRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAptProxyRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAptProxyRepositoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateAptProxyRepositoryNoContent creates a UpdateAptProxyRepositoryNoContent with default headers values
func NewUpdateAptProxyRepositoryNoContent() *UpdateAptProxyRepositoryNoContent {
	return &UpdateAptProxyRepositoryNoContent{}
}

/*
	UpdateAptProxyRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateAptProxyRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository4 no content response has a 2xx status code
func (o *UpdateAptProxyRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository4 no content response has a 3xx status code
func (o *UpdateAptProxyRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository4 no content response has a 4xx status code
func (o *UpdateAptProxyRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository4 no content response has a 5xx status code
func (o *UpdateAptProxyRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository4 no content response a status code equal to that given
func (o *UpdateAptProxyRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateAptProxyRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/proxy/{repositoryName}][%d] updateRepository4NoContent ", 204)
}

func (o *UpdateAptProxyRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/proxy/{repositoryName}][%d] updateRepository4NoContent ", 204)
}

func (o *UpdateAptProxyRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAptProxyRepositoryUnauthorized creates a UpdateAptProxyRepositoryUnauthorized with default headers values
func NewUpdateAptProxyRepositoryUnauthorized() *UpdateAptProxyRepositoryUnauthorized {
	return &UpdateAptProxyRepositoryUnauthorized{}
}

/*
	UpdateAptProxyRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateAptProxyRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository4 unauthorized response has a 2xx status code
func (o *UpdateAptProxyRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository4 unauthorized response has a 3xx status code
func (o *UpdateAptProxyRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository4 unauthorized response has a 4xx status code
func (o *UpdateAptProxyRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository4 unauthorized response has a 5xx status code
func (o *UpdateAptProxyRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository4 unauthorized response a status code equal to that given
func (o *UpdateAptProxyRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateAptProxyRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/proxy/{repositoryName}][%d] updateRepository4Unauthorized ", 401)
}

func (o *UpdateAptProxyRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/proxy/{repositoryName}][%d] updateRepository4Unauthorized ", 401)
}

func (o *UpdateAptProxyRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAptProxyRepositoryForbidden creates a UpdateAptProxyRepositoryForbidden with default headers values
func NewUpdateAptProxyRepositoryForbidden() *UpdateAptProxyRepositoryForbidden {
	return &UpdateAptProxyRepositoryForbidden{}
}

/*
	UpdateAptProxyRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateAptProxyRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository4 forbidden response has a 2xx status code
func (o *UpdateAptProxyRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository4 forbidden response has a 3xx status code
func (o *UpdateAptProxyRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository4 forbidden response has a 4xx status code
func (o *UpdateAptProxyRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository4 forbidden response has a 5xx status code
func (o *UpdateAptProxyRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository4 forbidden response a status code equal to that given
func (o *UpdateAptProxyRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateAptProxyRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/proxy/{repositoryName}][%d] updateRepository4Forbidden ", 403)
}

func (o *UpdateAptProxyRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/proxy/{repositoryName}][%d] updateRepository4Forbidden ", 403)
}

func (o *UpdateAptProxyRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAptProxyRepositoryNotFound creates a UpdateAptProxyRepositoryNotFound with default headers values
func NewUpdateAptProxyRepositoryNotFound() *UpdateAptProxyRepositoryNotFound {
	return &UpdateAptProxyRepositoryNotFound{}
}

/*
	UpdateAptProxyRepositoryNotFound describes a response with status code 404, with default header values.

Repository not found
*/
type UpdateAptProxyRepositoryNotFound struct {
}

// IsSuccess returns true when this update repository4 not found response has a 2xx status code
func (o *UpdateAptProxyRepositoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository4 not found response has a 3xx status code
func (o *UpdateAptProxyRepositoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository4 not found response has a 4xx status code
func (o *UpdateAptProxyRepositoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository4 not found response has a 5xx status code
func (o *UpdateAptProxyRepositoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository4 not found response a status code equal to that given
func (o *UpdateAptProxyRepositoryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateAptProxyRepositoryNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/proxy/{repositoryName}][%d] updateRepository4NotFound ", 404)
}

func (o *UpdateAptProxyRepositoryNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/apt/proxy/{repositoryName}][%d] updateRepository4NotFound ", 404)
}

func (o *UpdateAptProxyRepositoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
