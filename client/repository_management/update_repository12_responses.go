// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateNugetHostedRepositoryReader is a Reader for the UpdateNugetHostedRepository structure.
type UpdateNugetHostedRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNugetHostedRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateNugetHostedRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateNugetHostedRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateNugetHostedRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNugetHostedRepositoryNoContent creates a UpdateNugetHostedRepositoryNoContent with default headers values
func NewUpdateNugetHostedRepositoryNoContent() *UpdateNugetHostedRepositoryNoContent {
	return &UpdateNugetHostedRepositoryNoContent{}
}

/*
	UpdateNugetHostedRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateNugetHostedRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository12 no content response has a 2xx status code
func (o *UpdateNugetHostedRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository12 no content response has a 3xx status code
func (o *UpdateNugetHostedRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository12 no content response has a 4xx status code
func (o *UpdateNugetHostedRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository12 no content response has a 5xx status code
func (o *UpdateNugetHostedRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository12 no content response a status code equal to that given
func (o *UpdateNugetHostedRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateNugetHostedRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository12NoContent ", 204)
}

func (o *UpdateNugetHostedRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository12NoContent ", 204)
}

func (o *UpdateNugetHostedRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNugetHostedRepositoryUnauthorized creates a UpdateNugetHostedRepositoryUnauthorized with default headers values
func NewUpdateNugetHostedRepositoryUnauthorized() *UpdateNugetHostedRepositoryUnauthorized {
	return &UpdateNugetHostedRepositoryUnauthorized{}
}

/*
	UpdateNugetHostedRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateNugetHostedRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository12 unauthorized response has a 2xx status code
func (o *UpdateNugetHostedRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository12 unauthorized response has a 3xx status code
func (o *UpdateNugetHostedRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository12 unauthorized response has a 4xx status code
func (o *UpdateNugetHostedRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository12 unauthorized response has a 5xx status code
func (o *UpdateNugetHostedRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository12 unauthorized response a status code equal to that given
func (o *UpdateNugetHostedRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateNugetHostedRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository12Unauthorized ", 401)
}

func (o *UpdateNugetHostedRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository12Unauthorized ", 401)
}

func (o *UpdateNugetHostedRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNugetHostedRepositoryForbidden creates a UpdateNugetHostedRepositoryForbidden with default headers values
func NewUpdateNugetHostedRepositoryForbidden() *UpdateNugetHostedRepositoryForbidden {
	return &UpdateNugetHostedRepositoryForbidden{}
}

/*
	UpdateNugetHostedRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateNugetHostedRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository12 forbidden response has a 2xx status code
func (o *UpdateNugetHostedRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository12 forbidden response has a 3xx status code
func (o *UpdateNugetHostedRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository12 forbidden response has a 4xx status code
func (o *UpdateNugetHostedRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository12 forbidden response has a 5xx status code
func (o *UpdateNugetHostedRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository12 forbidden response a status code equal to that given
func (o *UpdateNugetHostedRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateNugetHostedRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository12Forbidden ", 403)
}

func (o *UpdateNugetHostedRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/nuget/hosted/{repositoryName}][%d] updateRepository12Forbidden ", 403)
}

func (o *UpdateNugetHostedRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
