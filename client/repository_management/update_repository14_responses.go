// Code generated by go-swagger; DO NOT EDIT.

package repository_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRubyGemsGroupRepositoryReader is a Reader for the UpdateRubyGemsGroupRepository structure.
type UpdateRubyGemsGroupRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRubyGemsGroupRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateRubyGemsGroupRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateRubyGemsGroupRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRubyGemsGroupRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRubyGemsGroupRepositoryNoContent creates a UpdateRubyGemsGroupRepositoryNoContent with default headers values
func NewUpdateRubyGemsGroupRepositoryNoContent() *UpdateRubyGemsGroupRepositoryNoContent {
	return &UpdateRubyGemsGroupRepositoryNoContent{}
}

/*
	UpdateRubyGemsGroupRepositoryNoContent describes a response with status code 204, with default header values.

Repository updated
*/
type UpdateRubyGemsGroupRepositoryNoContent struct {
}

// IsSuccess returns true when this update repository14 no content response has a 2xx status code
func (o *UpdateRubyGemsGroupRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update repository14 no content response has a 3xx status code
func (o *UpdateRubyGemsGroupRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository14 no content response has a 4xx status code
func (o *UpdateRubyGemsGroupRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update repository14 no content response has a 5xx status code
func (o *UpdateRubyGemsGroupRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository14 no content response a status code equal to that given
func (o *UpdateRubyGemsGroupRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateRubyGemsGroupRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/group/{repositoryName}][%d] updateRepository14NoContent ", 204)
}

func (o *UpdateRubyGemsGroupRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/group/{repositoryName}][%d] updateRepository14NoContent ", 204)
}

func (o *UpdateRubyGemsGroupRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRubyGemsGroupRepositoryUnauthorized creates a UpdateRubyGemsGroupRepositoryUnauthorized with default headers values
func NewUpdateRubyGemsGroupRepositoryUnauthorized() *UpdateRubyGemsGroupRepositoryUnauthorized {
	return &UpdateRubyGemsGroupRepositoryUnauthorized{}
}

/*
	UpdateRubyGemsGroupRepositoryUnauthorized describes a response with status code 401, with default header values.

Authentication required
*/
type UpdateRubyGemsGroupRepositoryUnauthorized struct {
}

// IsSuccess returns true when this update repository14 unauthorized response has a 2xx status code
func (o *UpdateRubyGemsGroupRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository14 unauthorized response has a 3xx status code
func (o *UpdateRubyGemsGroupRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository14 unauthorized response has a 4xx status code
func (o *UpdateRubyGemsGroupRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository14 unauthorized response has a 5xx status code
func (o *UpdateRubyGemsGroupRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository14 unauthorized response a status code equal to that given
func (o *UpdateRubyGemsGroupRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateRubyGemsGroupRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/group/{repositoryName}][%d] updateRepository14Unauthorized ", 401)
}

func (o *UpdateRubyGemsGroupRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/group/{repositoryName}][%d] updateRepository14Unauthorized ", 401)
}

func (o *UpdateRubyGemsGroupRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRubyGemsGroupRepositoryForbidden creates a UpdateRubyGemsGroupRepositoryForbidden with default headers values
func NewUpdateRubyGemsGroupRepositoryForbidden() *UpdateRubyGemsGroupRepositoryForbidden {
	return &UpdateRubyGemsGroupRepositoryForbidden{}
}

/*
	UpdateRubyGemsGroupRepositoryForbidden describes a response with status code 403, with default header values.

Insufficient permissions
*/
type UpdateRubyGemsGroupRepositoryForbidden struct {
}

// IsSuccess returns true when this update repository14 forbidden response has a 2xx status code
func (o *UpdateRubyGemsGroupRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update repository14 forbidden response has a 3xx status code
func (o *UpdateRubyGemsGroupRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update repository14 forbidden response has a 4xx status code
func (o *UpdateRubyGemsGroupRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update repository14 forbidden response has a 5xx status code
func (o *UpdateRubyGemsGroupRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update repository14 forbidden response a status code equal to that given
func (o *UpdateRubyGemsGroupRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateRubyGemsGroupRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/group/{repositoryName}][%d] updateRepository14Forbidden ", 403)
}

func (o *UpdateRubyGemsGroupRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/repositories/rubygems/group/{repositoryName}][%d] updateRepository14Forbidden ", 403)
}

func (o *UpdateRubyGemsGroupRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
